services:
  auth-service:
    container_name: auth-service
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    command: "uvicorn --factory api.v1.main:create_app --host=0.0.0.0 --reload --port 8000 --ssl-keyfile key.pem --ssl-certfile cert.pem"
    volumes:
      - ./AuthService/app:/app
    ports:
      - "${AUTH_SERVICE_PORT}:8000"
    env_file: ".env"
    restart: always
    networks:
      - backend
    depends_on:
      - postgres-database
      - test-postgres-database 
      - redis
      - test-redis
  postgres-database:
    container_name: postgres-database
    image: postgres:17.2
    environment:
      POSTGRES_DB: "${POSTGRES_DB_NAME}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "${POSTGRES_DB_PORT}:5432"
    volumes:
      - .postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - backend

  test-postgres-database:
    container_name: test-postgres-database
    image: postgres:17.2
    environment:
      POSTGRES_DB: ${TEST_POSTGRES_DB_NAME}
      POSTGRES_USER: ${TEST_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
    ports:
      - ${TEST_POSTGRES_DB_PORT}:5432
    volumes:
      - .test_postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - backend

  redis:
    image: redis:alpine3.21
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - .redis:/data
    restart: always
    networks:
      - backend

  test-redis:
    image: redis:alpine3.21
    container_name: test-redis
    environment:
      - REDIS_PASSWORD=${TEST_REDIS_PASSWORD}
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    ports:
      - "${TEST_REDIS_PORT}:6379"
    volumes:
      - .test-redis:/data
    restart: always
    networks:
      - backend


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck: 
      test: nc -z localhost 29092  

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      
networks:
  backend:
    driver: bridge

volumes:
  test-postgres-database:
    driver: local
  postgres-database:
    driver: local
  redis:
    driver: local
  test-redis:
    driver: local